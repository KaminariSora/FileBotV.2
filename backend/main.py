import asyncio
from mcp_layer import mcp
from intent_engine import extract_intent

async def route_intent(intent: dict):
    """‡πÅ‡∏°‡∏õ intent ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô mcp_layer"""
    intent_type = intent.get("intent")
    if intent_type == "search_file":
        print(f"üß≠ Routing to: {intent_type}")

        content = input("Content searching: ")
        search_path = r"D:\Working\C_work\Coding\FileBotV.2\TestData"
        file_type = input("üìÅ ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå (‡πÄ‡∏ä‡πà‡∏ô .pdf ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ß‡πâ‡∏ô‡πÑ‡∏ß‡πâ): ") or None

        params = {
            "content": content,
            "search_path": search_path,
            "type": file_type
        }

        # filename = input("üîé ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô *.txt): ")
        # file_type = input("üìÅ ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå (‡πÄ‡∏ä‡πà‡∏ô .pdf ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ß‡πâ‡∏ô‡πÑ‡∏ß‡πâ): ") or None
        # days = input("‚è± ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô (‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ß‡πâ‡∏ô‡πÑ‡∏ß‡πâ): ")
        # modified_within_days = int(days) if days else None
        # search_path = input("üìÇ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (default = .): ") or "."
        
        # params = {
        #     "filename": filename,
        #     "file_type": file_type,
        #     "modified_within_days": modified_within_days,
        #     "search_path": search_path
        # }
        result = await mcp.call_tool("search_file_tool", params)
        return result
    else:
        print(intent)
        return "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ"

async def main():
    print("üì¶ FileBot CLI (MCP Simulation)")
    while True:
        message = input("üë§ User: ")
        if message.strip().lower() in ["exit", "quit", "q", "e"]:
            break
        intent = extract_intent(message)
        print("üß† Intent:", intent)

        response = await route_intent(intent)
        print("ü§ñ Bot:", response)

if __name__ == "__main__":
    asyncio.run(main())  # ‚úÖ ‡∏£‡∏±‡∏ô async main
